import numpy as np
from scipy.optimize import fsolve
import matplotlib.pyplot as plt


x0 = 0.0
y0 = 0.0
tolerance = 0.001

def equations(vars):
    x, y = vars
    eq1 = x - (1 - np.sin(y + 0.5))
    eq2 = y + np.cos(x - 2)
    return [eq1, eq2]


initial_guess = [0, 0]
solution = fsolve(equations, initial_guess)
def simple_iteration(x0, y0, tolerance):
    xn = x0
    yn = y0
    n = 0

    while True:
        xn1 = np.sin(yn + 0.5) - 1
        yn1 = -np.cos(xn - 2)
        n += 1

        if abs(xn1 - xn) < tolerance and abs(yn1 - yn) < tolerance:
            break

        xn = xn1
        yn = yn1

    return xn1, yn1, n

x, y, iterations = simple_iteration(x0, y0, tolerance)

x, y = solution
print("Розв'язок:")
print(f"x = {x}")
print(f"y = {y}")


def f3(x):
    return x[0] - (1 - np.sin(x[1] + 0.5)), x[1] + np.cos(x[0] - 2)

check_solution = fsolve(f3, [1, 1])

print("Перевірка розв'язку:")
print(f"x = {check_solution[0]}")
print(f"y = {check_solution[1]}")

print(f"Розв'язок методом простої ітерації:")
print(f"x = {x:.3f}")
print(f"y = {y:.3f}")
print(f"Кількість ітерацій: {iterations}")


x_min, x_max = -2, 2
y_min, y_max = -4, 2
x_range = np.linspace(x_min, x_max, 400)
y_range = np.linspace(y_min, y_max, 400)
X, Y = np.meshgrid(x_range, y_range)
eq1 = X - (1 - np.sin(Y + 0.5))
eq2 = Y + np.cos(X - 2)

fig, ax = plt.subplots(figsize=(8, 8))
ax.contour(X, Y, eq1, levels=[0], colors='red', label='x = sin(y+0.5) - 1')
ax.contour(X, Y, eq2, levels=[0], colors='blue', label='y = -cos(x-2)')
ax.plot(x, y, 'go', label='Розв\'язок')
ax.set_xlim(x_min, x_max)
ax.set_ylim(y_min, y_max)
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_title('Графік системи рівнянь та розв\'язок')
ax.legend()
plt.grid(True)

plt.show()
Розв'язок:
x = 1.184297243604141
y = -0.6853568103152894
Перевірка розв'язку:
x = 1.1842972436418748
y = -0.6853568103469179
Розв'язок методом простої ітерації:
x = 1.184
y = -0.685
Кількість ітерацій: 16
